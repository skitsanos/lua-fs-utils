name: LuaRocks Release

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: "Set latest tag"
        id: set-latest-tag
        run: |
          #version_tag=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{github.repository}}/commits/${{github.ref}} | jq -r '.commit.message' | grep -oE 'v[0-9]+(\.[0-9]+)*')
          #echo "version tag: ${version_tag}"
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{github.repository}}/commits/${{github.ref}} | jq -r '.commit.message'
          #echo "latest_version=$(git tag | sort --version-sort | tail -n1)" >> $GITHUB_ENV

#      - name: Setup Lua
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y lua5.1 luarocks
#      - name: Install semver
#        run: |
#          # Download the script and save it to /usr/local/bin
#          wget -O /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
#          # Make script executable
#          chmod +x /usr/local/bin/semver
#          # Prove it works
#          semver --version
#
#      - name: Get current version
#        id: version
#        run: |
#          version=$(git tag | sort --version-sort | tail -n1)
#          echo "$version"
          
#          version="${{ env.RELEASE_VERSION }}"
#          if [ -z "$version" ]; then
#            version="1.0.0"
#          fi
#          echo "$version"
#          echo "{version}={$version}" >> $GITHUB_OUTPUT

#      - name: Increment version
#        id: new_version
#        run: |
#          echo "Next version: ${{ steps.version.outputs.version }}"
#          semver bump patch ${{ steps.version.outputs.version }}
#
#      - name: Create new tag
#        run: git tag -a ${{ steps.new_version.outputs.version }} -m "release version ${{ steps.new_version.outputs.version }}"
#
#      - name: Push new tag
#        run: git push origin ${{ steps.new_version.outputs.version }}
#
#      - name: Create rockspec
#        run: luarocks write_rockspec mymodule ${{ steps.new_version.outputs.version }}
#
#      - name: Package rock
#        run: luarocks pack mymodule-${{ steps.new_version.outputs.version }}-1.rockspec

#      - name: Upload rock
#        env:
#          LUAROCKS_USERNAME: ${{ secrets.LUAROCKS_USERNAME }}
#          LUAROCKS_PASSWORD: ${{ secrets.LUAR
